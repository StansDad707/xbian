--- a/Options.cpp
+++ b/Options.cpp
@@ -113,6 +113,7 @@ static const char* OPTION_DOWNLOADRATE
 static const char* OPTION_RENAMEBROKEN			= "RenameBroken";
 static const char* OPTION_CONTROLIP				= "ControlIp";
 static const char* OPTION_CONTROLPORT			= "ControlPort";
+static const char* OPTION_CONTROLUSER			= "ControlUser";
 static const char* OPTION_CONTROLPASSWORD		= "ControlPassword";
 static const char* OPTION_CONNECTIONTIMEOUT		= "ConnectionTimeout";
 static const char* OPTION_SAVEQUEUE				= "SaveQueue";
@@ -324,6 +325,7 @@ Options::Options(int argc, char* argv[])
 	m_iRetryInterval		= 0;
 	m_szControlPort			= 0;
 	m_szControlIP			= NULL;
+	m_szControlUser			= NULL;
 	m_szControlPassword		= NULL;
 	m_szLockFile			= NULL;
 	m_szDaemonUserName		= NULL;
@@ -497,6 +499,10 @@ Options::~Options()
 	{
 		free(m_szControlIP);
 	}
+	if (m_szControlUser)
+	{
+		free(m_szControlUser);
+	}
 	if (m_szControlPassword)
 	{
 		free(m_szControlPassword);
@@ -592,6 +598,7 @@ void Options::InitDefault()
 	SetOption(OPTION_DOWNLOADRATE, "0");
 	SetOption(OPTION_RENAMEBROKEN, "no");
 	SetOption(OPTION_CONTROLIP, "0.0.0.0");
+	SetOption(OPTION_CONTROLUSER, "nzbget");
 	SetOption(OPTION_CONTROLPASSWORD, "tegbzn6789");
 	SetOption(OPTION_CONTROLPORT, "6789");
 	SetOption(OPTION_CONNECTIONTIMEOUT, "60");
@@ -768,6 +775,7 @@ void Options::InitOptions()
 	m_szNZBProcess			= strdup(GetOption(OPTION_NZBPROCESS));
 	m_szNZBAddedProcess		= strdup(GetOption(OPTION_NZBADDEDPROCESS));
 	m_szControlIP			= strdup(GetOption(OPTION_CONTROLIP));
+	m_szControlUser			= strdup(GetOption(OPTION_CONTROLUSER));
 	m_szControlPassword		= strdup(GetOption(OPTION_CONTROLPASSWORD));
 	m_szLockFile			= strdup(GetOption(OPTION_LOCKFILE));
 	m_szDaemonUserName		= strdup(GetOption(OPTION_DAEMONUSERNAME));
@@ -2494,6 +2502,11 @@ void Options::ConvertOldOptionName(char
 	{
 		strncpy(szOption, "ControlPassword", iBufLen);
 	}
+	
+	if (!strcasecmp(szOption, "ServerUser"))
+	{
+		strncpy(szOption, "ControlUser", iBufLen);
+	}	
 
 	szOption[iBufLen-1] = '\0';
 }
--- a/Options.h
+++ b/Options.h
@@ -173,6 +173,7 @@ private:
 	bool				m_bSaveQueue;
 	bool				m_bDupeCheck;
 	char*				m_szControlIP;
+	char*				m_szControlUser;
 	char*				m_szControlPassword;
 	int					m_szControlPort;
 	char*				m_szLockFile;
@@ -317,6 +318,7 @@ public:
 	bool				GetDupeCheck() { return m_bDupeCheck; }
 	const char*			GetControlIP() { return m_szControlIP; }
 	const char*			GetControlPassword() { return m_szControlPassword; }
+	const char*			GetControlUser() { return m_szControlUser; }
 	int					GetControlPort() { return m_szControlPort; }
 	const char*			GetLockFile() { return m_szLockFile; }
 	const char*			GetDaemonUserName() { return m_szDaemonUserName; }
--- a/WebServer.cpp
+++ b/WebServer.cpp
@@ -197,7 +197,7 @@ void WebProcessor::Execute()
 	// Authorization
 	char* pw = strchr(szAuthInfo, ':');
 	if (pw) *pw++ = '\0';
-	if (strcmp(szAuthInfo, "nzbget") || strcmp(pw, g_pOptions->GetControlPassword()))
+	if (strcmp(szAuthInfo, g_pOptions->GetControlUser()) || strcmp(pw, g_pOptions->GetControlPassword()))
 	{
 		warn("request received on port %i from %s, but password invalid", g_pOptions->GetControlPort(), m_szClientIP);
 		SendAuthResponse();
--- a/nzbget.conf
+++ b/nzbget.conf
@@ -159,10 +159,10 @@ ControlIP=0.0.0.0
 # Port which NZBGet server and remote client use (1-65535).
 ControlPort=6789
 
-# Password which NZBGet server and remote client use.
+# Password and username which NZBGet server and remote client use.
 #
-# For authorization to web-interface use predefined username "nzbget" (not configurable)
-# and the password defined here.
+# For authorization to web-interface use the username and the password defined here.
+ControlUser=nzbget
 ControlPassword=tegbzn6789
 
 # See also option <LogBufferSize> in section "LOGGING"
